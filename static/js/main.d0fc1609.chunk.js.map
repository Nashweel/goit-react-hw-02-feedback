{"version":3,"sources":["components/Feedback/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Section/Section.js","data/constans.js","App.js","index.js","components/Statistics/Statistics.module.css","components/Feedback/Feedback.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","feedback","className","s","FeedbackButton","type","onClick","propTypes","PropTypes","arrayOf","string","func","isRequired","Notification","message","prototype","Statistics","good","neutral","bad","total","positivePercentage","StatList","StatItem","Section","title","children","CONSTANS_FEEDBACK","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedbacks","countPostivePercentage","Math","round","this","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oQAiBMA,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAACC,GAAD,OAdE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUH,EAAsB,EAAtBA,gBAClC,OACE,wBACEI,UAAWC,IAAEC,eACbC,KAAK,SACL,gBAAeJ,EACfK,QAASR,EAJX,SAMGG,IAOHG,CAAe,CAAEH,SAAUD,EAAQF,wBAIvCF,EAAgBW,UAAY,CAC1BV,QAASW,IAAUC,QAAQD,IAAUE,QACrCZ,gBAAiBU,IAAUG,KAAKC,YAGnBhB,Q,gBCzBTiB,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KAE1CD,EAAaE,UAAY,CACvBD,QAASN,IAAUE,OAAOE,YAGbC,QCuBAG,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACGD,EAAQ,GACP,qBAAIlB,UAAWC,IAAEmB,SAAjB,UACE,qBAAIpB,UAAWC,IAAEoB,SAAjB,mBAAkCN,KAClC,qBAAIf,UAAWC,IAAEoB,SAAjB,sBAAqCL,KACrC,qBAAIhB,UAAWC,IAAEoB,SAAjB,kBAAiCJ,KACjC,qBAAIjB,UAAWC,IAAEoB,SAAjB,oBAAmCH,KACnC,qBAAIlB,UAAWC,IAAEoB,SAAjB,kCACwBF,QAIjB,IAAVD,GAAe,cAAC,EAAD,CAAcN,QAAQ,0BCF7BU,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCPMC,EAAoB,CAAC,OAAQ,UAAW,OC0DtCC,E,4MAjDbC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,eAAiB,YAAiB,IACxB7B,EADuB,EAAb8B,OACUC,QAApB/B,SACR,EAAKgC,UAAS,SAACC,GAAD,sBAAmBjC,EAAWiC,EAAUjC,GAAY,O,EAGpEkC,oBAAsB,WACpB,MAA+B,EAAKN,MAEpC,OAFA,EAAQZ,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBiB,uBAAyB,WACvB,IAAQnB,EAAS,EAAKY,MAAdZ,KACFG,EAAQ,EAAKe,sBACnB,OAAOf,EAAQiB,KAAKC,MAAOrB,EAAOG,EAAS,KAAO,G,4CAGpD,WACE,MAA+BmB,KAAKV,MAA5BZ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQmB,KAAKJ,sBACbd,EAAqBkB,KAAKH,yBAChC,OACE,gCACE,cAAC,EAAD,CAASX,MAAM,4BAAf,SACE,cAAC,EAAD,CACE5B,QAAS8B,EACT7B,gBAAiByC,KAAKT,mBAG1B,cAAC,EAAD,CAASL,MAAM,aAAf,SACE,cAAC,EAAD,CACER,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA1CdmB,IAAMC,WCHxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,SAAW,6BAA6B,SAAW,+B,kBCArED,EAAOC,QAAU,CAAC,eAAiB,oC","file":"static/js/main.d0fc1609.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Feedback.module.css\";\n\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\n  return (\n    <button\n      className={s.FeedbackButton}\n      type=\"button\"\n      data-feedback={feedback}\n      onClick={onLeaveFeedback}\n    >\n      {feedback}\n    </button>\n  );\n};\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map((option) =>\n    FeedbackButton({ feedback: option, onLeaveFeedback })\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.prototype = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\nimport Notification from \"../Notification\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      {total > 0 && (\n        <ul className={s.StatList}>\n          <li className={s.StatItem}>Good: {good}</li>\n          <li className={s.StatItem}>Neutral: {neutral}</li>\n          <li className={s.StatItem}>Bad: {bad}</li>\n          <li className={s.StatItem}>Total: {total}</li>\n          <li className={s.StatItem}>\n            Positive Percentage: {positivePercentage}\n          </li>\n        </ul>\n      )}\n      {total === 0 && <Notification message=\"No feedback gives\" />}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","export const CONSTANS_FEEDBACK = [\"good\", \"neutral\", \"bad\"];\n","import React from \"react\";\n\nimport FeedbackOptions from \"./components/Feedback\";\n// import Notification from \"./components/Notification\";\nimport Statistics from \"./components/Statistics\";\nimport Section from \"./components/Section\";\nimport { CONSTANS_FEEDBACK } from \"./data/constans\";\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState((prevState) => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n\n  countTotalFeedbacks = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPostivePercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedbacks();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedbacks();\n    const positivePercentage = this.countPostivePercentage();\n    return (\n      <div>\n        <Section title=\"Plese leave your feedback\">\n          <FeedbackOptions\n            options={CONSTANS_FEEDBACK}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatList\":\"Statistics_StatList__3oEMc\",\"StatItem\":\"Statistics_StatItem__1fQ3I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackButton\":\"Feedback_FeedbackButton__TO8Uo\"};"],"sourceRoot":""}